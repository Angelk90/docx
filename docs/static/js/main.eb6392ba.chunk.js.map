{"version":3,"sources":["function.js","page/Docx.js","page/Error.js","App.js","serviceWorker.js","index.js"],"names":["className","args","join","iModule","InspectModule","loadFile","url","callback","PizZipUtils","getBinaryContent","Dropzone","multiple","onOperation","onDelete","React","useState","myFile","setMyFile","onDrop","useCallback","acceptedFiles","useDropzone","getRootProps","getInputProps","file","map","key","Chip","icon","AttachFile","label","path","size","color","style","cursor","length","Docx","darkState","classes","makeStyles","theme","title","textShadow","button","margin","spacing","useStyles","setUrl","state","setState","viewer","useRef","instance","setInstance","upload","setUpload","useEffect","Object","keys","constructor","generateDocument","WebViewer","extension","current","then","showFile","files","a","reader","FileReader","onload","e","content","target","result","doc","Docxtemplater","PizZip","modules","tags","getAllTags","out","getZip","generate","type","mimeType","objectURL","URL","createObjectURL","fromEntries","entries","el","value","split","name","undefined","includes","moment","Date","readAsBinaryString","save","error","zip","loadZip","setOptions","linebreaks","t","console","log","replace","match","format","setData","render","JSON","stringify","Error","getOwnPropertyNames","reduce","properties","errors","Array","errorMessages","explanation","loadDocument","filename","saveAs","onChangeDatePicker","prev","String","prototype","capitalize","this","charAt","toUpperCase","slice","locale","utils","MomentUtils","paddingBottom","display","width","minHeight","marginTop","Accordion","defaultExpanded","AccordionSummary","expandIcon","ExpandMore","aria-controls","id","Button","variant","startIcon","CloudDownload","onClick","AccordionDetails","flex","replaceAll","fullWidth","inputVariant","placeholder","onChange","TimePicker","ampm","TextField","multiline","rows","ref","height","float","Typography","paragraph","drawerWidth","App","props","wind","container","document","body","prefersDark","window","matchMedia","matches","localDark","localStorage","getItem","isDark","pathname","useLocation","mobileOpen","repo","root","drawer","breakpoints","up","flexShrink","appBar","marginLeft","menuButton","marginRight","grey","blue","toolbar","mixins","drawerPaper","backgroundColor","flexGrow","padding","palletType","mainPrimaryColor","mainSecondaryColor","darkTheme","createMuiTheme","palette","primary","main","secondary","useTheme","handleDrawerToggle","handleThemeChange","setItem","menu","GTranslate","routeObj","obj","List","index","badge","to","ListItem","page","ListItemIcon","ListItemText","ThemeProvider","CssBaseline","AppBar","position","boxShadow","Toolbar","IconButton","aria-label","edge","Menu","checked","Hidden","smUp","implementation","Drawer","anchor","direction","open","onClose","paper","ModalProps","keepMounted","xsDown","exact","component","Boolean","location","hostname","ReactDOM","basename","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.eb6392ba.chunk.js","sourcesContent":["const className = (...args) => args.join(' ');\nexport { className };\n","import React, { useState, useEffect, useRef } from \"react\";\nimport {\n    TextField,\n    makeStyles,\n    Button,\n    Chip,\n    Accordion,\n    AccordionSummary,\n    AccordionDetails\n} from \"@material-ui/core\";\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardDatePicker,\n    TimePicker\n} from \"@material-ui/pickers\";\nimport {\n    AttachFile,\n    CloudDownload,\n    CloudUpload,\n    ExpandMore\n} from \"@material-ui/icons\";\nimport { useDropzone } from \"react-dropzone\";\nimport PizZip from \"pizzip\";\nimport PizZipUtils from \"pizzip/utils/index.js\";\nimport { saveAs } from \"file-saver\";\nimport Docxtemplater from \"docxtemplater\";\nimport InspectModule from \"docxtemplater/js/inspect-module\";\nimport moment from \"moment\";\nimport MomentUtils from \"@date-io/moment\";\nimport \"moment/locale/it\";\nconst iModule = InspectModule();\nimport WebViewer from \"@pdftron/webviewer\";\n\nfunction loadFile(url, callback) {\n    PizZipUtils.getBinaryContent(url, callback);\n}\n\nimport { className } from \"../function\";\nimport \"../styles/main.css\";\n\nfunction Dropzone({ multiple = false, onOperation, onDelete = () => {} }) {\n    const [myFile, setMyFile] = React.useState([]);\n\n    const onDrop = React.useCallback(\n        (acceptedFiles) => {\n            setMyFile([...acceptedFiles]);\n            onOperation(acceptedFiles);\n        },\n        [myFile, onOperation]\n    );\n\n    const { getRootProps, getInputProps } = useDropzone({\n        onDrop\n    });\n\n    const removeAll = () => setMyFile([]);\n    const file = myFile.map((file, key) => (\n        <Chip\n            key={key}\n            icon={<AttachFile />}\n            label={`${file.path} - ${file.size} bytes`}\n            color=\"primary\"\n            onDelete={() => {\n                removeAll();\n                onDelete();\n            }}\n            style={{ cursor: \"pointer\" }}\n        />\n    ));\n\n    return (\n        <>\n      <span {...getRootProps({ className: \"drop-zon\" })}>\n        {<input {...getInputProps()} multiple={multiple} />}\n          {file.length > 0 ? (\n              file\n          ) : (\n              <Chip\n                  icon={<AttachFile />}\n                  label={\"File\"}\n                  color=\"primary\"\n                  style={{\n                      cursor: \"pointer\"\n                  }}\n              />\n          )}\n      </span>\n        </>\n    );\n}\n\nexport default function Docx({ darkState }) {\n    const useStyles = makeStyles((theme) => ({\n        title: {\n            color: darkState ? \"#ffffff\" : \"#343a40\",\n            textShadow: `3px 3px 2px ${\n                darkState ? \"rgba(0, 0, 0, 1)\" : \"rgba(150, 150, 150, 1)\"\n            }`\n        },\n        button: {\n            margin: theme.spacing(1)\n        }\n    }));\n    const classes = useStyles();\n    const [url, setUrl] = useState(\"\");\n    const [docs, setDocs] = useState(\"\");\n    const [state, setState] = useState({});\n    const viewer = useRef(null);\n    const [instance, setInstance] = useState(null);\n\n    const [upload, setUpload] = useState(false);\n\n    useEffect(() => {\n        if (\n            !(\n                state &&\n                Object.keys(state).length === 0 &&\n                state.constructor === Object\n            ) &&\n            upload\n        )\n            generateDocument();\n    }, [state, upload, instance]);\n\n    useEffect(() => {\n        if (upload)\n            WebViewer(\n                {\n                    path: \"/docx/webviewer/lib\",\n                    extension: \"docx\"\n                },\n                viewer.current\n            ).then((instance) => {\n                setInstance(instance);\n            });\n    }, [upload]);\n\n    const showFile = async (files) => {\n        const reader = new FileReader();\n        reader.onload = async (e) => {\n            const content = e.target.result;\n            var doc = new Docxtemplater(new PizZip(content), { modules: [iModule] });\n            var tags = iModule.getAllTags();\n            var out = doc.getZip().generate({\n                type: \"blob\",\n                mimeType:\n                    \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\"\n            });\n            const objectURL = URL.createObjectURL(out);\n            setUrl(objectURL);\n            setUpload(true);\n\n            setState(\n                Object.fromEntries(\n                    Object.entries(tags).map((el) => {\n                        let [name, type] = el[0]?.split(\"::\");\n                        let value;\n                        if (type !== undefined) [type, value] = type?.split(\"||\");\n                        else [name, value] = name?.split(\"||\");\n                        return [\n                            el[0],\n                            value !== undefined\n                                ? [\"date\", \"time\"].includes(type)\n                                ? moment(\n                                    value === \"now\" ? new Date() : value,\n                                    type === \"date\" ? \"DD/MM/YYYY\" : \"HH:mm\"\n                                )\n                                : value\n                                : [\"date\", \"time\"].includes(type)\n                                ? null\n                                : \"\"\n                        ];\n                    })\n                )\n            );\n        };\n        reader.readAsBinaryString(files[0]);\n    };\n\n    const generateDocument = (save = false) => {\n        loadFile(url, function (error, content) {\n            if (error) {\n                throw error;\n            }\n            var zip = new PizZip(content);\n            var doc = new Docxtemplater().loadZip(zip).setOptions({ linebreaks:true});\n            let b = Object.entries(state)\n                .map(el => console.log(el[0].replace(/||[A-Z]+(?:_[A-Z]+)*/ig,\"\"))\n                    //.replace(/||[A-Z]+(?:_[A-Z]+)*/ig,\"\")\n                )\n            const t = Object.fromEntries(\n                Object.entries(state).map((el) => {\n                    let [, type] = el[0]?.split(\"::\");\n                    if (type !== undefined) type = type?.split(\"||\")[0];\n                    let value = el[1];\n                    if(typeof value === \"string\") {\n                        let c = value.match(/{[A-Z]+(?:_[A-Z]+)*}/ig)\n                        //if(c?.length > 0)\n                            //c = c.map(el => el.replace(\"{\", \"\").replace(\"}\", \"\"))\n                       // console.log(\"c: \", value, c, b, state)\n                    }\n                    if (value !== null && [\"date\", \"time\"].includes(type))\n                        value = moment(\n                            value,\n                            type === \"date\" ? \"DD/MM/YYYY\" : \"HH:mm\"\n                        ).format(type === \"date\" ? \"DD/MM/YYYY\" : \"HH:mm\");\n                    if (value === \"\" || !value) value = `{${el[0]}}`;\n                    return [el[0], value];\n                })\n            );\n\n            doc.setData(t);\n            try {\n                // render the document (replace all occurences of {first_name} by John, {last_name} by Doe, ...)\n                doc.render();\n            } catch (error) {\n                // The error thrown here contains additional information when logged with JSON.stringify (it contains a properties object containing all suberrors).\n                function replaceErrors(key, value) {\n                    if (value instanceof Error) {\n                        return Object.getOwnPropertyNames(value).reduce(function (\n                            error,\n                            key\n                            ) {\n                                error[key] = value[key];\n                                return error;\n                            },\n                            {});\n                    }\n                    return value;\n                }\n                console.log(JSON.stringify({ error: error }, replaceErrors));\n\n                if (error.properties && error.properties.errors instanceof Array) {\n                    const errorMessages = error.properties.errors\n                        .map(function (error) {\n                            return error.properties.explanation;\n                        })\n                        .join(\"\\n\");\n                    console.log(\"errorMessages\", errorMessages);\n                    // errorMessages is a humanly readable message looking like this :\n                    // 'The tag beginning with \"foobar\" is unopened'\n                }\n                throw error;\n            }\n            var out = doc.getZip().generate({\n                type: \"blob\",\n                mimeType:\n                    \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\"\n            }); //Output the document using Data-URI\n            instance?.loadDocument(out, { filename: \"name.docx\" });\n            if(save) saveAs(out, \"output.docx\");\n        });\n    };\n\n    const onChange = ({ target: { value } }, name) => {\n        setState((prev) => ({ ...prev, [name]: value }));\n    };\n\n    const onChangeDatePicker = (value, name) => {\n        setState((prev) => ({ ...prev, [name]: value }));\n    };\n\n    String.prototype.capitalize = function () {\n        return this.charAt(0).toUpperCase() + this.slice(1);\n    };\n\n    console.log(state)\n\n    return (\n        <MuiPickersUtilsProvider locale=\"it\" utils={MomentUtils}>\n            <h1 className={className(classes.title, \"text-6xl font-bold hp\")}>\n                Upload\n                <span className=\"text-primary\">Docx</span>\n            </h1>\n\n            <div style={{ paddingBottom: 12 }}>\n                <Dropzone\n                    onOperation={showFile}\n                    onDelete={() => {\n                        setUpload(false);\n                        setState({});\n                    }}\n                />\n            </div>\n\n            {upload && (\n                <div\n                    style={{\n                        display: \"flex\"\n                    }}\n                >\n                    <div\n                        style={{\n                            width: \"50%\",\n                            minHeight: \"500px\",\n                            marginTop: 7\n                        }}\n                    >\n                        <Accordion defaultExpanded>\n                            <AccordionSummary\n                                expandIcon={<ExpandMore />}\n                                aria-controls=\"panel1a-content\"\n                                id=\"panel1a-header\"\n                            >\n                                <div style={{}}>\n                                    <Button\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        className={classes.button}\n                                        startIcon={<CloudDownload />}\n                                        onClick={() => generateDocument(true)}\n                                    />\n                                </div>\n                            </AccordionSummary>\n                            <AccordionDetails>\n                                <div style={{ flex: 1 }}>\n                                    {Object.entries(state).map((el, key) => {\n                                        let [label, type] = el[0]?.split(\"::\");\n                                        if (type !== undefined) type = type?.split(\"||\")[0];\n                                        else label = label?.split(\"||\")[0];\n                                        label = label.replaceAll(\"_\", \" \").capitalize();\n                                        if (type === \"date\")\n                                            return (\n                                                <div key={key} style={{ paddingBottom: 15 }}>\n                                                    <KeyboardDatePicker\n                                                        fullWidth\n                                                        id={`field_${key}`}\n                                                        size=\"small\"\n                                                        label={label}\n                                                        inputVariant=\"outlined\"\n                                                        placeholder=\"dd/mm/yyyy\"\n                                                        value={el[1]}\n                                                        onChange={(value) =>\n                                                            onChangeDatePicker(value, el[0])\n                                                        }\n                                                        format=\"DD/MM/YYYY\"\n                                                    />\n                                                </div>\n                                            );\n                                        else if (type === \"time\")\n                                            return (\n                                                <div key={key} style={{ paddingBottom: 15 }}>\n                                                    <TimePicker\n                                                        fullWidth\n                                                        id={`field_${key}`}\n                                                        size=\"small\"\n                                                        label={label}\n                                                        inputVariant=\"outlined\"\n                                                        placeholder=\"hh:mm\"\n                                                        ampm={false}\n                                                        value={el[1]}\n                                                        onChange={(value) =>\n                                                            onChangeDatePicker(value, el[0])\n                                                        }\n                                                    />\n                                                </div>\n                                            );\n                                        else\n                                            return (\n                                                <div key={key} style={{ paddingBottom: 15 }}>\n                                                    <TextField\n                                                        fullWidth\n                                                        id={`field_${key}`}\n                                                        label={label}\n                                                        variant=\"outlined\"\n                                                        size=\"small\"\n                                                        value={el[1]}\n                                                        onChange={(value) => onChange(value, el[0])}\n                                                        multiline={type === \"multiline\"}\n                                                        rows={4}\n                                                    />\n                                                </div>\n                                            );\n                                    })}\n                                </div>\n                            </AccordionDetails>\n                        </Accordion>\n                    </div>\n\n                    <div\n                        className=\"webviewer\"\n                        ref={viewer}\n                        style={{\n                            width: \"50%\",\n                            height: \"100vh\",\n                            float: \"right\"\n                        }}\n                    />\n                </div>\n            )}\n        </MuiPickersUtilsProvider>\n    );\n}\n","import React from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { className } from \"../function\";\nimport \"../styles/main.css\";\n\nexport default function Error({ darkState }) {\n    const useStyles = makeStyles((theme) => ({\n        title: {\n            color: darkState ? \"#ffffff\" : \"#343a40\",\n            textShadow: `3px 3px 2px ${\n                darkState ? \"rgba(0, 0, 0, 1)\" : \"rgba(150, 150, 150, 1)\"\n            }`\n        }\n    }));\n    const classes = useStyles();\n    return (\n        <div className=\"text-center\">\n            <h1 className={className(classes.title, \"text-6xl font-bold hp\")}>404</h1>\n            <Typography paragraph variant=\"h5\" color=\"textSecondary\">\n                We are sorry but we could not find the page you are looking.\n            </Typography>\n        </div>\n    );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Switch, Route, Link, useLocation } from \"react-router-dom\";\nimport {\n    AppBar,\n    CssBaseline,\n    Drawer,\n    Hidden,\n    IconButton,\n    List,\n    ListItem,\n    ListItemIcon,\n    ListItemText,\n    Toolbar,\n    Chip\n} from \"@material-ui/core\";\nimport {\n    GTranslate,\n    Menu,\n} from \"@material-ui/icons\";\nimport {\n    makeStyles,\n    useTheme,\n    createMuiTheme,\n    ThemeProvider\n} from \"@material-ui/core/styles\";\nimport { blue, grey } from \"@material-ui/core/colors\";\nimport DarkModeToggle from \"react-dark-mode-toggle\";\nimport { Docx, Error } from \"./page\";\nimport \"./styles/main.css\";\nimport \"./App.css\";\n\nconst drawerWidth = 240;\n\nfunction App(props) {\n    const { wind } = props;\n    const container = wind !== undefined ? () => wind().document.body : undefined;\n    const prefersDark = window.matchMedia(\"(prefers-color-scheme: dark)\").matches;\n    const localDark = localStorage.getItem(\"dark\");\n    const isDark = localDark === null ? prefersDark : localDark === \"true\";\n\n    let location = useLocation();\n    let pathname = location.pathname.replace(\"/\", \"\");\n    if (pathname === \"\") pathname = \"docx\";\n\n    const [state, setState] = React.useState({\n        mobileOpen: false,\n        darkState: isDark,\n        repo: []\n    });\n    const { mobileOpen, darkState, repo } = state;\n\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            display: \"flex\"\n        },\n        drawer: {\n            [theme.breakpoints.up(\"sm\")]: {\n                width: drawerWidth,\n                flexShrink: 0\n            }\n        },\n        appBar: {\n            [theme.breakpoints.up(\"sm\")]: {\n                width: `calc(100% - ${drawerWidth}px)`,\n                marginLeft: drawerWidth\n            }\n        },\n        menuButton: {\n            marginRight: theme.spacing(2),\n            [theme.breakpoints.up(\"sm\")]: {\n                display: \"none\"\n            },\n            backgroundColor: darkState ? grey[900] : blue[500]\n        },\n        // necessary for content to be below app bar\n        toolbar: theme.mixins.toolbar,\n        drawerPaper: {\n            width: drawerWidth,\n            color: \"#ffffff\",\n            backgroundColor: darkState ? grey[900] : blue[500]\n        },\n        content: {\n            flexGrow: 1,\n            padding: theme.spacing(3)\n        }\n    }));\n\n    const palletType = darkState ? \"dark\" : \"light\";\n    const mainPrimaryColor = darkState ? grey[900] : blue[500];\n    const mainSecondaryColor = darkState ? grey[800] : blue[300];\n    const darkTheme = createMuiTheme({\n        palette: {\n            type: palletType,\n            primary: {\n                main: mainPrimaryColor\n            },\n            secondary: {\n                main: mainSecondaryColor\n            }\n        }\n    });\n\n    const classes = useStyles();\n    const theme = useTheme();\n    const handleDrawerToggle = () =>\n        setState((prev) => ({ ...prev, mobileOpen: !mobileOpen }));\n    const changePage = (page) => setState((prev) => ({ ...prev, page }));\n    const handleThemeChange = React.useCallback(() => {\n        localStorage.setItem(\"dark\", !darkState);\n        setState((prev) => ({ ...prev, darkState: !prev.darkState }));\n    }, []);\n\n    const menu = [\n        { title: \"Upload Docx\", path: \"docx\", icon: <GTranslate />}\n    ];\n\n    const routeObj = [\n        { path: \"/\", obj: <Docx darkState={darkState} /> },\n        { path: \"docx\", obj: <Docx darkState={darkState} /> },\n    ];\n\n    const drawer = (\n        <div className=\"mt-32\">\n            <div className={classes.toolbar} />\n            <List>\n                {menu.map(({ title, path, icon, badge }, index) => (\n                    <Link to={`/${path}`} key={title}>\n                        <ListItem button key={title} onClick={() => changePage(path)}>\n                            <ListItemIcon\n                                style={{ color: path === pathname ? \"#ffffff\" : \"#ffffff80\" }}\n                            >\n                                {icon}\n                            </ListItemIcon>\n                            <ListItemText\n                                primary={<span className=\"font-bold\">{title}</span>}\n                                style={{ color: path === pathname ? \"#ffffff\" : \"#ffffff80\" }}\n                            />\n                            {badge && (\n                                <Chip\n                                    label={badge}\n                                    size=\"small\"\n                                    color=\"secondary\"\n                                    className=\"font-bold\"\n                                    style={{ color: \"#ffffff\" }}\n                                />\n                            )}\n                        </ListItem>\n                    </Link>\n                ))}\n            </List>\n        </div>\n    );\n\n    return (\n        <ThemeProvider theme={darkTheme}>\n            <div className={classes.root}>\n                <CssBaseline />\n                <AppBar\n                    position=\"fixed\"\n                    className={classes.appBar}\n                    style={{\n                        backgroundColor: darkState ? \"#303030\" : grey[50],\n                        boxShadow: \"none\"\n                    }}\n                >\n                    <Toolbar className={\"shadow-none\"}>\n                        <IconButton\n                            color=\"inherit\"\n                            aria-label=\"open drawer\"\n                            edge=\"start\"\n                            onClick={handleDrawerToggle}\n                            className={classes.menuButton}\n                        >\n                            <Menu />\n                        </IconButton>\n                        <div className=\"ml-auto text-right flex\">\n                            <DarkModeToggle\n                                onChange={handleThemeChange}\n                                checked={darkState}\n                                size={60}\n                            />\n                        </div>\n                    </Toolbar>\n                </AppBar>\n\n                <nav className={classes.drawer} aria-label=\"mailbox folders\">\n                    {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n                    <Hidden smUp implementation=\"css\">\n                        <Drawer\n                            container={container}\n                            variant=\"temporary\"\n                            anchor={theme.direction === \"rtl\" ? \"right\" : \"left\"}\n                            open={mobileOpen}\n                            onClose={handleDrawerToggle}\n                            classes={{\n                                paper: classes.drawerPaper\n                            }}\n                            ModalProps={{\n                                keepMounted: true // Better open performance on mobile.\n                            }}\n                        >\n                            {drawer}\n                        </Drawer>\n                    </Hidden>\n                    <Hidden xsDown implementation=\"css\">\n                        <Drawer\n                            classes={{\n                                paper: classes.drawerPaper\n                            }}\n                            variant=\"permanent\"\n                            open\n                        >\n                            {drawer}\n                        </Drawer>\n                    </Hidden>\n                </nav>\n                <main className={classes.content}>\n                    <div className={classes.toolbar} />\n                    <Switch>\n                        {routeObj.map(({ path, obj }, key) => (\n                            <Route exact path={`/${path}`} component={() => obj} key={key} />\n                        ))}\n                        <Route path={`/lib`} component={() => <div>ciao</div>} />\n                        <Route component={() => <Error darkState={darkState} />} />\n                    </Switch>\n                </main>\n            </div>\n        </ThemeProvider>\n    );\n}\n\nApp.propTypes = {\n    /**\n     * Injected by the documentation to work in an iframe.\n     * You won't need it on your project.\n     */\n    wind: PropTypes.func\n};\n\nexport default App;\n/*\n\n */\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {\n    HashRouter,\n    BrowserRouter as Router\n} from \"react-router-dom\";\n\nReactDOM.render(\n    <HashRouter basename='/'>\n        <App />\n    </HashRouter>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}